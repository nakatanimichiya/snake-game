{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Btn.jsx","components/ControlBtn.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Btn","onStart","onStop","onRestart","status","ControlBtn","onChage","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keycode","document","addEventListener","removeEventListener","console","log","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6e8a970.chunk.js","sourcesContent":["import React from \"react\";\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? \"\" : \"is-hidden\";\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length:</span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty:</span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div className={`difficulty-button difficulty-up ${upVisibility}`} onClick={onUpDifficulty}></div>\n            <div className={`difficulty-button difficulty-down ${downVisibility}`} onClick={onDownDifficulty}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Navigation;\n","import React from \"react\";\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>;\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\n\nconst Btn = ({ onStart, onStop, onRestart, status }) => {\n  return (\n    <div className=\"button\">\n      {/* [条件式]&&[任意の処理] */}\n      {status === \"init\" && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"suspended\" && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"gameover\" && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === \"playing\" && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Btn;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowUp, faArrowDown, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ControlBtn = ({ onChage }) => {\n  const onUp = () => onChage(\"up\");\n  const onRight = () => onChage(\"right\");\n  const onLeft = () => onChage(\"left\");\n  const onDown = () => onChage(\"down\");\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div className=\"column\">\n        <button className=\"manipulation-btn btn btn-up \" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down \" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  );\n};\n\nexport default ControlBtn;\n","export const getFoodPosition = (fieldSize, excludes) => {\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n};\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill(\"\");\n    fields.push(cols);\n  }\n  fields[snake.y][snake.x] = \"snake\";\n\n  const food = getFoodPosition(fieldSize, [snake]);\n  fields[food.y][food.x] = \"food\";\n\n  return fields;\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Btn from \"./components/Btn\";\nimport ControlBtn from \"./components/ControlBtn\";\nimport { initFields, getFoodPosition } from \"./utils\";\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(35, initialPosition);\n\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\nconst Difficulty = [1000, 500, 100, 50, 10];\n\nconst GameStatus = Object.freeze({\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gameover: \"gameover\",\n});\n\nconst Direction = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nconst OppositeDirection = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === \"snake\";\n};\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    setBody([initialPosition]);\n    //ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      unsubscribe();\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const onStart = () => setStatus(GameStatus.playing);\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(35, initialPosition));\n  };\n\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status, difficulty]\n  );\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keycode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [onChangeDirection]);\n\n  const handleMoving = () => {\n    console.log(body);\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      return false;\n    }\n\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\n      const removingTrack = newBody.pop(); //末尾の配列を取り出して削除\n      fields[removingTrack.y][removingTrack.x] = \"\";\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = \"food\";\n    }\n    fields[newPosition.y][newPosition.x] = \"snake\";\n    newBody.unshift(newPosition); //配列の先頭に要素を追加\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n\n  console.log(\"direction\", direction);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"titleContents\">\n          <h1>Snake Game</h1>\n          <Navigation length={body.length} difficulty={difficulty} onChangeDifficulty={onChangeDifficulty} />\n        </div>\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n\n      <footer className=\"footer\">\n        <Btn status={status} onStart={onStart} onStop={onStop} onRestart={onRestart} />\n        <ControlBtn onChage={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}